{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "dftestest"
		},
		"AzureDataLakeStorage1_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'AzureDataLakeStorage1'"
		},
		"AzureDataLakeStorageDestination_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'AzureDataLakeStorageDestination'"
		},
		"AzureSqlDatabase_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlDatabase'"
		},
		"AzureDataLakeStorage1_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://lakestoragetest.dfs.core.windows.net/"
		},
		"AzureDataLakeStorageDestination_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://lake2.dfs.core.windows.net/"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Duplicates_pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Duplicates_dataflow",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Duplicates_dataflow",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {},
									"sink2": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-10-04T11:25:49Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/Duplicates_dataflow')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Incremet_load_pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Increment Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"modifiedDatetimeStart": {
										"value": "@addDays(utcnow(),-1)",
										"type": "Expression"
									},
									"modifiedDatetimeEnd": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"wildcardFolderPath": "Data",
									"wildcardFileName": "*.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Increment_load_dataset",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Increment_load_destination_data",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-09-30T16:36:18Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Increment_load_dataset')]",
				"[concat(variables('factoryId'), '/datasets/Increment_load_destination_data')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Log_pipeline_Executions')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Stored procedure1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[ADFPipeLineExecutions]",
							"storedProcedureParameters": {
								"activityname": {
									"value": {
										"value": "@pipeline()?.TriggeredByPipelineName",
										"type": "Expression"
									},
									"type": "String"
								},
								"adfName": {
									"value": {
										"value": "@pipeline().DataFactory",
										"type": "Expression"
									},
									"type": "String"
								},
								"pipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"runID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"triggerName": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								},
								"triggerTime": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "DateTime"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 4
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-10-04T09:33:36Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/fixed_length_pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "fixedlength_dataflow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "fixedlength_dataflow1",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-10-03T13:22:57Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/fixedlength_dataflow1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Distinct_Destination')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "filesystemtest"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "1",
						"type": "String"
					},
					{
						"name": "US-2019-103800",
						"type": "String"
					},
					{
						"name": "03-01-2019",
						"type": "String"
					},
					{
						"name": "07-01-2019",
						"type": "String"
					},
					{
						"name": "Standard Class",
						"type": "String"
					},
					{
						"name": "DP-13000",
						"type": "String"
					},
					{
						"name": "Darren Powers",
						"type": "String"
					},
					{
						"name": "Consumer",
						"type": "String"
					},
					{
						"name": "United States",
						"type": "String"
					},
					{
						"name": "Houston",
						"type": "String"
					},
					{
						"name": "Texas",
						"type": "String"
					},
					{
						"name": "77095",
						"type": "String"
					},
					{
						"name": "Central",
						"type": "String"
					},
					{
						"name": "OFF-PA-10000174",
						"type": "String"
					},
					{
						"name": "Office Supplies",
						"type": "String"
					},
					{
						"name": "Paper",
						"type": "String"
					},
					{
						"name": "\"Message Book, Wirebound, Four 5 1/2\"\" X 4\"\" Forms/Pg.",
						"type": "String"
					},
					{
						"name": "200 Dupl. Sets/Book\"",
						"type": "String"
					},
					{
						"name": "16.448",
						"type": "String"
					},
					{
						"name": "2",
						"type": "String"
					},
					{
						"name": "0.2",
						"type": "String"
					},
					{
						"name": "US",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Duplicate_Destination1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "filesystemtest"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "1",
						"type": "String"
					},
					{
						"name": "US-2019-103800",
						"type": "String"
					},
					{
						"name": "03-01-2019",
						"type": "String"
					},
					{
						"name": "07-01-2019",
						"type": "String"
					},
					{
						"name": "Standard Class",
						"type": "String"
					},
					{
						"name": "DP-13000",
						"type": "String"
					},
					{
						"name": "Darren Powers",
						"type": "String"
					},
					{
						"name": "Consumer",
						"type": "String"
					},
					{
						"name": "United States",
						"type": "String"
					},
					{
						"name": "Houston",
						"type": "String"
					},
					{
						"name": "Texas",
						"type": "String"
					},
					{
						"name": "77095",
						"type": "String"
					},
					{
						"name": "Central",
						"type": "String"
					},
					{
						"name": "OFF-PA-10000174",
						"type": "String"
					},
					{
						"name": "Office Supplies",
						"type": "String"
					},
					{
						"name": "Paper",
						"type": "String"
					},
					{
						"name": "\"Message Book, Wirebound, Four 5 1/2\"\" X 4\"\" Forms/Pg.",
						"type": "String"
					},
					{
						"name": "200 Dupl. Sets/Book\"",
						"type": "String"
					},
					{
						"name": "16.448",
						"type": "String"
					},
					{
						"name": "2",
						"type": "String"
					},
					{
						"name": "0.2",
						"type": "String"
					},
					{
						"name": "US",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FixedLength_dataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "FixedLenth"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "fixedlength.txt",
						"folderPath": "Data",
						"fileSystem": "filesystemtest"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "1000Ajay     AP77765021451",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Increment_load_dataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "Data",
						"fileSystem": "filesystemtest"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Row ID",
						"type": "String"
					},
					{
						"name": "Order ID",
						"type": "String"
					},
					{
						"name": "Order Date",
						"type": "String"
					},
					{
						"name": "Ship Date",
						"type": "String"
					},
					{
						"name": "Ship Mode",
						"type": "String"
					},
					{
						"name": "Customer ID",
						"type": "String"
					},
					{
						"name": "Customer Name",
						"type": "String"
					},
					{
						"name": "Segment",
						"type": "String"
					},
					{
						"name": "Country/Region",
						"type": "String"
					},
					{
						"name": "City",
						"type": "String"
					},
					{
						"name": "State/Province",
						"type": "String"
					},
					{
						"name": "Postal Code",
						"type": "String"
					},
					{
						"name": "Region",
						"type": "String"
					},
					{
						"name": "Product ID",
						"type": "String"
					},
					{
						"name": "Category",
						"type": "String"
					},
					{
						"name": "Sub-Category",
						"type": "String"
					},
					{
						"name": "Product Name",
						"type": "String"
					},
					{
						"name": "Sales",
						"type": "String"
					},
					{
						"name": "Quantity",
						"type": "String"
					},
					{
						"name": "Discount",
						"type": "String"
					},
					{
						"name": "Profit",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Increment_load_destination_data')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorageDestination",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "Data",
						"fileSystem": "balayya"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Row ID",
						"type": "String"
					},
					{
						"name": "Order ID",
						"type": "String"
					},
					{
						"name": "Order Date",
						"type": "String"
					},
					{
						"name": "Ship Date",
						"type": "String"
					},
					{
						"name": "Ship Mode",
						"type": "String"
					},
					{
						"name": "Customer ID",
						"type": "String"
					},
					{
						"name": "Customer Name",
						"type": "String"
					},
					{
						"name": "Segment",
						"type": "String"
					},
					{
						"name": "Country/Region",
						"type": "String"
					},
					{
						"name": "City",
						"type": "String"
					},
					{
						"name": "State/Province",
						"type": "String"
					},
					{
						"name": "Postal Code",
						"type": "String"
					},
					{
						"name": "Region",
						"type": "String"
					},
					{
						"name": "Product ID",
						"type": "String"
					},
					{
						"name": "Category",
						"type": "String"
					},
					{
						"name": "Sub-Category",
						"type": "String"
					},
					{
						"name": "Product Name",
						"type": "String"
					},
					{
						"name": "Sales",
						"type": "String"
					},
					{
						"name": "Quantity",
						"type": "String"
					},
					{
						"name": "Discount",
						"type": "String"
					},
					{
						"name": "Profit",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorageDestination')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Superstore_Dataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Sample - Superstore.csv",
						"folderPath": "Data",
						"fileSystem": "filesystemtest"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Row ID",
						"type": "String"
					},
					{
						"name": "Order ID",
						"type": "String"
					},
					{
						"name": "Order Date",
						"type": "String"
					},
					{
						"name": "Ship Date",
						"type": "String"
					},
					{
						"name": "Ship Mode",
						"type": "String"
					},
					{
						"name": "Customer ID",
						"type": "String"
					},
					{
						"name": "Customer Name",
						"type": "String"
					},
					{
						"name": "Segment",
						"type": "String"
					},
					{
						"name": "Country/Region",
						"type": "String"
					},
					{
						"name": "City",
						"type": "String"
					},
					{
						"name": "State/Province",
						"type": "String"
					},
					{
						"name": "Postal Code",
						"type": "String"
					},
					{
						"name": "Region",
						"type": "String"
					},
					{
						"name": "Product ID",
						"type": "String"
					},
					{
						"name": "Category",
						"type": "String"
					},
					{
						"name": "Sub-Category",
						"type": "String"
					},
					{
						"name": "Product Name",
						"type": "String"
					},
					{
						"name": "Sales",
						"type": "String"
					},
					{
						"name": "Quantity",
						"type": "String"
					},
					{
						"name": "Discount",
						"type": "String"
					},
					{
						"name": "Profit",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLakeStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLakeStorage1_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('AzureDataLakeStorage1_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLakeStorageDestination')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLakeStorageDestination_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('AzureDataLakeStorageDestination_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlDatabase_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Duplicates_dataflow')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Superstore_Dataset",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Duplicate_Destination1",
								"type": "DatasetReference"
							},
							"name": "sink1"
						},
						{
							"dataset": {
								"referenceName": "Distinct_Destination",
								"type": "DatasetReference"
							},
							"name": "sink2"
						}
					],
					"transformations": [
						{
							"name": "aggregate1"
						},
						{
							"name": "split1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          {Row ID} as string,",
						"          {Order ID} as string,",
						"          {Order Date} as string,",
						"          {Ship Date} as string,",
						"          {Ship Mode} as string,",
						"          {Customer ID} as string,",
						"          {Customer Name} as string,",
						"          Segment as string,",
						"          {Country/Region} as string,",
						"          City as string,",
						"          {State/Province} as string,",
						"          {Postal Code} as string,",
						"          Region as string,",
						"          {Product ID} as string,",
						"          Category as string,",
						"          {Sub-Category} as string,",
						"          {Product Name} as string,",
						"          Sales as string,",
						"          Quantity as string,",
						"          Discount as string,",
						"          Profit as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> source1",
						"source1 aggregate(groupBy({Customer Name}),",
						"     Count = count()) ~> aggregate1",
						"aggregate1 split(Count > 1,",
						"     disjoint: false) ~> split1@(conditionDuplicate, conditionsplitDistinct)",
						"split1@conditionDuplicate sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          {1} as string,",
						"          {US-2019-103800} as string,",
						"          {03-01-2019} as string,",
						"          {07-01-2019} as string,",
						"          {Standard Class} as string,",
						"          {DP-13000} as string,",
						"          {Darren Powers} as string,",
						"          Consumer as string,",
						"          {United States} as string,",
						"          Houston as string,",
						"          Texas as string,",
						"          {77095} as string,",
						"          Central as string,",
						"          {OFF-PA-10000174} as string,",
						"          {Office Supplies} as string,",
						"          Paper as string,",
						"          {\"Message Book, Wirebound, Four 5 1/2\"\" X 4\"\" Forms/Pg.} as string,",
						"          {200 Dupl. Sets/Book\"} as string,",
						"          {16.448} as string,",
						"          {2} as string,",
						"          {0.2} as string,",
						"          US as string",
						"     ),",
						"     partitionFileNames:['Duplicates'],",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> sink1",
						"split1@conditionsplitDistinct sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          {1} as string,",
						"          {US-2019-103800} as string,",
						"          {03-01-2019} as string,",
						"          {07-01-2019} as string,",
						"          {Standard Class} as string,",
						"          {DP-13000} as string,",
						"          {Darren Powers} as string,",
						"          Consumer as string,",
						"          {United States} as string,",
						"          Houston as string,",
						"          Texas as string,",
						"          {77095} as string,",
						"          Central as string,",
						"          {OFF-PA-10000174} as string,",
						"          {Office Supplies} as string,",
						"          Paper as string,",
						"          {\"Message Book, Wirebound, Four 5 1/2\"\" X 4\"\" Forms/Pg.} as string,",
						"          {200 Dupl. Sets/Book\"} as string,",
						"          {16.448} as string,",
						"          {2} as string,",
						"          {0.2} as string,",
						"          US as string",
						"     ),",
						"     partitionFileNames:['Distinct'],",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> sink2"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Superstore_Dataset')]",
				"[concat(variables('factoryId'), '/datasets/Duplicate_Destination1')]",
				"[concat(variables('factoryId'), '/datasets/Distinct_Destination')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/copy_distinct_months_dataflow')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Superstore_Dataset",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Distinct_Destination",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "derivedColumn1"
						},
						{
							"name": "filter1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          {Row ID} as short,",
						"          {Order ID} as string,",
						"          {Order Date} as date 'dd-MM-yyyy',",
						"          {Ship Date} as date,",
						"          {Ship Mode} as string,",
						"          {Customer ID} as string,",
						"          {Customer Name} as string,",
						"          Segment as string,",
						"          {Country/Region} as string,",
						"          City as string,",
						"          {State/Province} as string,",
						"          {Postal Code} as string,",
						"          Region as string,",
						"          {Product ID} as string,",
						"          Category as string,",
						"          {Sub-Category} as string,",
						"          {Product Name} as string,",
						"          Sales as string,",
						"          Quantity as string,",
						"          Discount as double,",
						"          Profit as double",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> source1",
						"source1 derive({Order Date} = month({Order Date})) ~> derivedColumn1",
						"derivedColumn1 filter({Order Date} == 1) ~> filter1",
						"filter1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          {1} as string,",
						"          {US-2019-103800} as string,",
						"          {03-01-2019} as string,",
						"          {07-01-2019} as string,",
						"          {Standard Class} as string,",
						"          {DP-13000} as string,",
						"          {Darren Powers} as string,",
						"          Consumer as string,",
						"          {United States} as string,",
						"          Houston as string,",
						"          Texas as string,",
						"          {77095} as string,",
						"          Central as string,",
						"          {OFF-PA-10000174} as string,",
						"          {Office Supplies} as string,",
						"          Paper as string,",
						"          {\"Message Book, Wirebound, Four 5 1/2\"\" X 4\"\" Forms/Pg.} as string,",
						"          {200 Dupl. Sets/Book\"} as string,",
						"          {16.448} as string,",
						"          {2} as string,",
						"          {0.2} as string,",
						"          US as string",
						"     ),",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Superstore_Dataset')]",
				"[concat(variables('factoryId'), '/datasets/Distinct_Destination')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/fixedlength_dataflow1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "FixedLength_dataset",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Increment_load_destination_data",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "derivedColumn1"
						},
						{
							"name": "select1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          {1000Ajay     AP77765021451} as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> source1",
						"source1 derive(EmpID = substring({1000Ajay     AP77765021451}, 1, 4),",
						"          Name = substring({1000Ajay     AP77765021451}, 5, 9),",
						"          State = substring({1000Ajay     AP77765021451}, 14, 2),",
						"          Phone_number = substring({1000Ajay     AP77765021451}, 16, 10)) ~> derivedColumn1",
						"derivedColumn1 select(mapColumn(",
						"          EmpID,",
						"          Name,",
						"          State,",
						"          Phone_number",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          {Row ID} as string,",
						"          {Order ID} as string,",
						"          {Order Date} as string,",
						"          {Ship Date} as string,",
						"          {Ship Mode} as string,",
						"          {Customer ID} as string,",
						"          {Customer Name} as string,",
						"          Segment as string,",
						"          {Country/Region} as string,",
						"          City as string,",
						"          {State/Province} as string,",
						"          {Postal Code} as string,",
						"          Region as string,",
						"          {Product ID} as string,",
						"          Category as string,",
						"          {Sub-Category} as string,",
						"          {Product Name} as string,",
						"          Sales as string,",
						"          Quantity as string,",
						"          Discount as string,",
						"          Profit as string",
						"     ),",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/FixedLength_dataset')]",
				"[concat(variables('factoryId'), '/datasets/Increment_load_destination_data')]"
			]
		}
	]
}